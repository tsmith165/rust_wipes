# NextJS 15 AI SPEC WORKFLOW

When implementing any task we should create a markdown spec with file format `_<TASK NAME>-SPEC.md` . This spec file will be crucial in implementing the end goal successfully as it will require multiple tasks / steps that need to be able to be completed by an AI agent with debug help from a senior software dev.

The spec should have the following sections:

1.) Project details (NextJS 15, tailwind, drizzle, server actions instead of API routes, framer motion, etc, including dependencies and their exact versions)

2.) End Goal

3.) Previous implementation overview (file tree, description of each file)

4.) Updated implementation overview

5.) Current proposed solution to end goals / high-level spec

6.) Next steps - steps in this should be very details and written in a way that an AI agent will be able to utilize in order to complete the required step.

7.) Current Unresolved Issues - any issues which we know about but do not know how to resolve or just have not yet resolved

8.) Change Log - history of changes with detailed descriptions

Add a section at the top of the markdown spec for rules for the AI agent as well. Be concise with this as we do not want it to take up too much space in the SPEC, but it is important that these rules are followed so ensure that all required details are present.

1.) Do not change the structure or delete sections from the markdown spec, only add into it

2.) use NextJS 15 server actions. do not use API routes. utilize @Web if needed for context on server actions and their usage

3.) focus on re-usability. We should be able to easily utilize the "wrapper" / "container" components to create other similar pages

4.) Do not over-complicate things, make sure that this is in the spec as well. We should favor simple solutions to complex flows rather than jumping to abstractions. Consult me if we need to do anything overly-complex

5.) If a file is indented > ~5-6 times, we almost certainly need to create some "wrapper" / "container" component

6.) Document all assumptions made during implementation in the Current Implementation Details section

7.) When making significant architectural decisions, document the reasoning in the Change Log section

8.) Do NOT implement tests unless specifically requested. Instead, suggest when manual review by the senior software dev would be beneficial

9.) Always update the SPEC file with each change being made to maintain accurate documentation

10.) Before implementing changes, review the Previous Implementation Overview section and examine the referenced files to ensure a complete understanding of the existing system

11.) As the AI agent you are crucial in this workflow and need to make decisions that are good for the longevity of the project while not over-abstracting and over-complicating things
